problem link:::https://www.geeksforgeeks.org/problems/find-the-number-of-islands/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=find_the_number_of_islands

//solution

void bfs(int r,int c,int row,int col,int delrow[],int delcol[],vector<vector<int>>&visited,vector<vector<char>>&grid){
        queue<pair<int,int>>q;
        q.push(make_pair(row,col));
        visited[row][col]=1;
        while(!q.empty()){
            pair<int,int>temp=q.front();
            q.pop();
            int temprow=temp.first;
            int tempcol=temp.second;
            for(int i=0;i<8;i++){
                int newrow=temprow+delrow[i];
                int newcol=tempcol+delcol[i];
                if(newrow>=0 && newrow<r && newcol>=0 && newcol<c && !visited[newrow][newcol] && grid[newrow][newcol]=='1'){
                    visited[newrow][newcol]=1;
                    q.push(make_pair(newrow,newcol));
                }
            }
        }
    }

 int numIslands(vector<vector<char>>& grid) {
        int ctr=0;
        int delrow[]={-1,-1,0,1,1,1,0,-1};
        int delcol[]={0,1,1,1,0,-1,-1,-1};
        int row=grid.size();
        int col=grid[0].size();
        vector<vector<int>>visited(row,vector<int>(col,0));
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(grid[i][j]=='1'){
                    if(!visited[i][j]){
                        ctr++;
                        bfs(row,col,i,j,delrow,delcol,visited,grid);
                    }
                }
            }
        }
        return ctr;
    }