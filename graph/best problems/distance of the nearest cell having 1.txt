problem link::::https://www.geeksforgeeks.org/problems/distance-of-nearest-cell-having-1-1587115620/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=distance-of-nearest-cell-having-1


//solution


vector<vector<int>>nearest(vector<vector<int>>grid)
	{
	    int row=grid.size();
	    int col=grid[0].size();
	    vector<vector<int>>finalans(row,vector<int>(col,0));
	    vector<vector<int>>visited(row,vector<int>(col,0));
	    queue<pair<int,pair<int,int>>>q;
	    for(int i=0;i<row;i++){
	        for(int j=0;j<col;j++){
	            if(grid[i][j]==1){
	                q.push(make_pair(0,make_pair(i,j)));
	                visited[i][j]=1;
	            }
	        }
	    }
	    int delrow[]={-1,0,1,0};
	    int delcol[]={0,1,0,-1};
	    while(!q.empty()){
	        pair<int,pair<int,int>>temp=q.front();
	        q.pop();
	        int dist=temp.first;
	        int temprow=temp.second.first;
	        int tempcol=temp.second.second;
	        finalans[temprow][tempcol]=dist;
	        for(int i=0;i<4;i++){
	            int newrow=temprow+delrow[i];
	            int newcol=tempcol+delcol[i];
	            //check the range 
	            if(newrow>=0 && newrow<row && newcol>=0 && newcol<col 
	            && grid[newrow][newcol]==0 && !visited[newrow][newcol]){
	                q.push(make_pair(dist+1,make_pair(newrow,newcol)));
	                visited[newrow][newcol]=1;
	            }
	        }
	    }
	    return finalans;
	}